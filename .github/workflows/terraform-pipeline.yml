name: Terraform Pipeline with Terratest

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform workflow (${{ matrix.environment }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [test, production]

    environment: ${{ matrix.environment }}
    
    env:
      ARM_ACCESS_KEY: ${{ secrets.ACCOUNT_KEY }}
    
    defaults:
      run:
        working-directory: terraform

    steps:
      # Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3
          
      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Azure login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Select or create workspace
      - name: Terraform Workspace
        run: terraform workspace select -or-create ${{ matrix.environment }}

      # Formatting and validation
      - name: Terraform Fmt Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      # Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan \
            -var "subscription_id=${{ vars.AZURE_SUBSCRIPTION_ID }}" \
            -var "resource_group_name=${{ vars.TF_RESOURCE_GROUP_NAME }}" \
            -var "acr_name=${{ vars.TF_ACR_NAME }}" \
            -var "app_service_plan_name=${{ vars.TF_APP_SERVICE_PLAN_NAME }}" \
            -var "app_service_name=${{ vars.TF_APP_SERVICE_NAME }}" \
            -var "location=${{ vars.TF_LOCATION }}" \
            -out=tfplan-${{ matrix.environment }}

      # Terraform Apply (only on push)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve tfplan-${{ matrix.environment }}

      # Setup Go for Terratest
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      # Install Terratest dependencies
      - name: Install Terratest Dependencies
        working-directory: ../tests
        run: go mod tidy

      # Run Terratest
      - name: Run Terratest
        working-directory: ../tests
        run: |
          go test -v . -args \
            resource_group_name=${{ vars.TF_RESOURCE_GROUP_NAME }} \
            acr_name=${{ vars.TF_ACR_NAME }} \
            location="${{ vars.TF_LOCATION }}"
